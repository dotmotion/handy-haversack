{"version":3,"sources":["components/ui/AppDrawer.js","components/ui/SpellCard.js","pages/Search.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","textAlign","menuButton","marginRight","spacing","title","textTransform","marginLeft","appBar","backgroundColor","AppDrawer","props","classes","className","AppBar","position","elevation","Toolbar","IconButton","edge","color","aria-label","Typography","variant","data","styles","margin","padding","closeButton","right","top","palette","grey","dialogPaper","maxHeight","Transition","React","forwardRef","ref","Slide","direction","DialogTitle","withStyles","children","other","onClose","disableTypography","DialogContent","MuiDialogContent","spell","useState","open","setOpen","Dialog","close","TransitionComponent","maxWidth","fullWidth","id","style","display","flexDirection","alignItems","justifyContent","name","fontSize","fontWeight","school","range","casting_time","duration","dividers","gutterBottom","desc","map","section","key","higher_level","Search","componentWillMount","a","async","request","res","setState","spells","results","url","api","state","axios","get","then","catch","e","console","error","openModal","modal","selected","closeModal","onSearchChange","searchfield","target","value","this","filteredSpells","filter","toLowerCase","includes","marginTop","TextField","placeholder","type","InputProps","input","onChange","Paper","onClick","Component","borderBottomColor","label","createMuiTheme","primary","main","secondary","App","toggleDrawer","event","drawer","page","character","ThemeProvider","SwipeableDrawer","onOpen","height","width","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d42799f2.chunk.js","sourcesContent":["import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    textAlign: \"center\"\n  },\n  menuButton: {\n    marginRight: theme.spacing(2)\n  },\n  title: {\n    flexGrow: 1,\n    textAlign: \"center\",\n    textTransform: \"capitalize\",\n    marginLeft: \"-48px\"\n  },\n  appBar: {\n    backgroundColor: \"#2d3645\"\n  }\n}));\n\nexport default function AppDrawer(props) {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\" className={classes.appBar} elevation={3}>\n        <Toolbar>\n          <IconButton\n            edge=\"start\"\n            className={classes.menuButton}\n            color=\"secondary\"\n            aria-label=\"menu\"\n            // onClick={e => props.drawer(e)}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" className={classes.title}>\n            {props.data}\n          </Typography>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport MuiDialogTitle from \"@material-ui/core/DialogTitle\";\nimport MuiDialogContent from \"@material-ui/core/DialogContent\";\nimport Slide from \"@material-ui/core/Slide\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst styles = theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2)\n  },\n  closeButton: {\n    position: \"absolute\",\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500]\n  },\n  dialogPaper: {\n    maxHeight: \"80vh\"\n  }\n});\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nconst DialogTitle = withStyles(styles)(props => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles(theme => ({\n  root: {\n    padding: theme.spacing(2)\n  }\n}))(MuiDialogContent);\n\nconst SpellCard = props => {\n  const { spell } = props;\n  const [open, setOpen] = React.useState(props.open);\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div>\n      <Dialog\n        onClose={props.close}\n        TransitionComponent={Transition}\n        open={open}\n        maxWidth=\"md\"\n        fullWidth={true}\n      >\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n          <div\n            style={{\n              display: \"flex\",\n              flexDirection: \"row\",\n              alignItems: \"center\",\n              justifyContent: \"space-between\"\n            }}\n          >\n            <div className=\"column\">\n              <Typography variant=\"h5\">{spell.name}</Typography>\n              <span\n                style={{ fontSize: \"12px\", fontWeight: \"600\", color: \"gray\" }}\n              >\n                {spell.school.name}\n              </span>\n            </div>\n            <div\n              className=\"column\"\n              style={{ fontSize: \"12px\", fontWeight: \"600\", color: \"gray\" }}\n            ></div>\n            <div\n              className=\"column\"\n              style={{\n                fontSize: \"12px\",\n                fontWeight: \"600\",\n                color: \"gray\",\n                alignItems: \"flex-end\"\n              }}\n            >\n              <div className=\"row\">\n                <span style={{ color: \"black\" }}>{\"Range: \"}</span>\n                <span>{spell.range}</span>\n              </div>\n              <div className=\"row\">\n                <span style={{ color: \"black\" }}>{\"Cast time: \"}</span>\n                <span>{spell.casting_time}</span>\n              </div>\n              <div className=\"row\">\n                <span style={{ color: \"black\" }}>{\"Duration: \"}</span>\n                <span>{spell.duration}</span>\n              </div>\n            </div>\n          </div>\n        </DialogTitle>\n        <DialogContent dividers>\n          <Typography variant=\"h6\" gutterBottom>\n            Description:\n          </Typography>\n          {spell.desc.map(section => (\n            <Typography variant=\"body2\" gutterBottom key={section}>\n              {section}\n            </Typography>\n          ))}\n          {spell.higher_level && (\n            <>\n              <Typography variant=\"h6\" gutterBottom>\n                Higher Level:\n              </Typography>\n              <Typography variant=\"body2\" gutterBottom>\n                {spell.higher_level}\n              </Typography>\n            </>\n          )}\n        </DialogContent>\n      </Dialog>\n    </div>\n  );\n};\n\nexport default withStyles(styles)(SpellCard);\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\n\nimport SpellCard from \"../components/ui/SpellCard\";\n\nimport TextField from \"@material-ui/core/TextField\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nconst styles = {\n  root: {\n    \"& label.Mui-focused\": {\n      color: \"#fff\"\n    },\n    \"& .MuiInput-underline:after\": {\n      borderBottomColor: \"#fff\"\n    }\n  },\n  input: {\n    color: \"white\",\n    margin: 5\n  },\n  label: {\n    color: \"white\"\n  }\n};\n\nclass Search extends Component {\n  constructor() {\n    super();\n    this.state = {\n      spells: [],\n      selected: null,\n      modal: false,\n      searchfield: \"\",\n      api: \"https://www.dnd5eapi.co\"\n    };\n  }\n\n  componentWillMount = async () => {\n    const res = await this.request(\"/api/spells\");\n    this.setState({ spells: res.results });\n  };\n\n  request = async url => {\n    const { api } = this.state;\n    let data;\n    await axios\n      .get(`${api}${url}`)\n      .then(res => {\n        data = res.data;\n      })\n      .catch(e => console.error(e));\n    return data;\n  };\n\n  openModal = async spell => {\n    const res = await this.request(spell.url);\n    this.setState({ modal: true, selected: res });\n  };\n\n  closeModal = () => {\n    this.setState({ modal: false, selected: null });\n  };\n\n  onSearchChange = e => {\n    this.setState({ searchfield: e.target.value });\n  };\n\n  render() {\n    const { spells, modal, selected } = this.state;\n    const { classes } = this.props;\n\n    const filteredSpells = spells.filter(spell => {\n      return spell.name\n        .toLowerCase()\n        .includes(this.state.searchfield.toLowerCase());\n    });\n    return (\n      <div className=\"list\">\n        <header\n          style={{\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            marginTop: 10\n          }}\n        >\n          <TextField\n            placeholder=\"Search\"\n            type=\"search\"\n            InputProps={{\n              className: classes.input\n            }}\n            className={classes.root}\n            onChange={e => this.onSearchChange(e)}\n          />\n        </header>\n        {modal && (\n          <SpellCard spell={selected} open={modal} close={this.closeModal} />\n        )}\n        {filteredSpells.map(spell => (\n          <Paper\n            elevation={5}\n            className=\"paper\"\n            onClick={() => this.openModal(spell)}\n            key={spell.name}\n          >\n            {spell.name}\n          </Paper>\n        ))}\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles)(Search);\n","import React, { Component } from \"react\";\nimport \"./App.css\";\n\nimport AppDrawer from \"./components/ui/AppDrawer\";\n// import BottomNav from \"./components/ui/BottomNav\";\n// import Character from \"./pages/Character\";\nimport Search from \"./pages/Search\";\n\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\nimport SwipeableDrawer from \"@material-ui/core/SwipeableDrawer\";\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: { main: \"#263238\" },\n    secondary: { main: \"#78909C\" }\n  }\n});\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      character: {},\n      page: \"search\",\n      drawer: false\n    };\n  }\n\n  toggleDrawer = event => {\n    if (\n      event &&\n      event.type === \"keydown\" &&\n      (event.key === \"Tab\" || event.key === \"Shift\")\n    ) {\n      return;\n    }\n\n    this.setState({ drawer: !this.state.drawer });\n  };\n\n  onChange = selected => {\n    this.setState({ page: selected });\n  };\n\n  render() {\n    const { drawer } = this.state;\n    return (\n      <ThemeProvider theme={theme}>\n        <div className=\"App\">\n          <AppDrawer data={this.state.page} drawer={this.toggleDrawer} />\n          <SwipeableDrawer\n            open={drawer}\n            onClose={this.toggleDrawer}\n            onOpen={this.toggleDrawer}\n          >\n            <div\n              style={{ height: 20, width: 120, backgroundColor: \"black\" }}\n            ></div>\n          </SwipeableDrawer>\n          <main className=\"Main\">\n            {/* <Character /> */}\n            <Search />\n          </main>\n          {/* <BottomNav onChange={this.onChange} /> */}\n        </div>\n      </ThemeProvider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}